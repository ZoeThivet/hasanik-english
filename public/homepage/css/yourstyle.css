/*******************************************************************************
Add your styles here
 *******************************************************************************/
       
/*
=====
DEPENDENCES
=====
*/

/* The component will reset button browser styles */

.r-button{
  --uirButtonBackgroundColor: var(--rButtonBackgroundColor, transparent);
  --uirButtonPadding: var(--rButtonPadding, var(--rButtonPaddingTop, 0) var(--rButtonPaddingRight, 0) var(--rButtonPaddingBottom, 0) var(--rButtonPaddingLeft, 0));
  --uirButtonBorderWidth: var(--rButtonBorderWidth, 0);
  --uirButtonBorderStyle: var(--rButtonBorderStyle, solid);
  --uirButtonBorderColor: var(--rButtonBorderColor, currentColor);
  --uirButtonFontFamily: var(--rButtonFontFamily, inherit);
  --uirButtonFontSize: var(--rButtonFontSize,  inherit);
  --uirButtonColor: var(--rButtonColor);

  background-color: var(--uirButtonBackgroundColor);
  padding: var(--uirButtonPadding);

  border-width: var(--uirButtonBorderWidth);
  border-style: var(--uirButtonBorderStyle);
  border-color: var(--uirButtonBorderColor);

  cursor: pointer;

  font-family: var(--uirButtonFontFamily);
  font-size: var(--uirButtonFontSize);
}

.r-button::-moz-focus-inner,
.r-button[type="button"]::-moz-focus-inner,
.r-button[type="reset"]::-moz-focus-inner,
.r-button[type="submit"]::-moz-focus-inner {
  
  /* Remove the inner border and padding in Firefox. */
  
  border-style: none;
  padding: 0;
}

/* The component will reset browser's styles of link */

.r-link{
    --uirLinkDisplay: var(--rLinkDisplay, inline-flex);
    --uirLinkTextColor: var(--rLinkTextColor);
    --uirLinkTextDecoration: var(--rLinkTextDecoration, none);

    display: var(--uirLinkDisplay) !important;
    color: var(--uirLinkTextColor) !important;
    text-decoration: var(--uirLinkTextDecoration) !important;
}

/* The component will reset browser's styles of list */

.r-list{
    --uirListPaddingLeft: var(--rListPaddingLeft, 0);
    --uirListMarginTop: var(--rListMarginTop, 0);
    --uirListMarginBottom: var(--rListMarginBottom, 0);
    --uirListListStyle: var(--rListListStyle, none);

    padding-left: var(--uirListPaddingLeft) !important;
    margin-top: var(--uirListMarginTop) !important;
    margin-bottom: var(--uirListMarginBottom) !important;
    list-style: var(--uirListListStyle) !important;
}

/* Basic styles of the hamburger component */

.m-hamburger{  
  --uiHamburgerThickness: var(--hamburgerThickness, 4px);

  display: var(--hamburgerDisplay, inline-flex);
  width: var(--hamburgerWidth, 28px);
  height: var(--hamburgerHeight, 20px);

  position: relative;
  top: -5px;
}

.m-hamburger::before, 
.m-hamburger::after, 
.m-hamburger__label{
  width: 100%;
  height: var(--uiHamburgerThickness);
  border-radius: var(--hamburgerBorderRadius, 5px);
  background-color: var(--hamburgerBackgroundColor, currentColor);

  position: absolute;
  left: 0;
}

.m-hamburger::before, 
.m-hamburger::after{
  content:"";
}

.m-hamburger::before{
  top: 0;
}

.m-hamburger::after{
  bottom: 0;
}

.m-hamburger__label{
  /* The calculation of middle hamburger button line position */
  
  top: calc(50% - calc(var(--uiHamburgerThickness) / 2));
}

/* helper to hide elements that are available only for screen readers. */

.screen-reader{
  width: var(--screenReaderWidth, 1px) !important;
  height: var(--screenReaderHeight, 1px) !important;
  padding: var(--screenReaderPadding, 0) !important;
  border: var(--screenReaderBorder, none) !important;

  position: var(--screenReaderPosition, absolute) !important;
  clip: var(--screenReaderClip, rect(1px, 1px, 1px, 1px)) !important;
  overflow: var(--screenReaderOverflow, hidden) !important;
}

/*
=====
MENU STYLES
=====
*/

.menu{
  --uiMenuCircleSize: var(--menuCircleSize, 6.25rem);
  --uiMenuCircleOffset: var(--menuCircleOffset, 1rem);
  --uiMenuCircleHeight: calc(var(--uiMenuCircleSize) / 2);  
  --uiMenuCircleBackgroundColor:rgba(52, 152, 219, 0);
  /* --uiMenuCircleBackgroundColor: background-color:rgba(52, 152, 219, 0.8); */

  --uiMenuHamburgerWidth: var(--menuHamburgerWidth, 1.75rem);
  --uiMenuHamburgerHeight: var(--menuHamburgerHeight, 1.25rem);
  
  --rButtonPaddingTop: calc(var(--uiMenuCircleHeight) - var(--uiMenuHamburgerHeight) - var(--uiMenuCircleOffset));
  
  --hamburgerWidth: var(--uiMenuHamburgerWidth);
  --hamburgerHeight: var(--uiMenuHamburgerHeight);
  --hamburgerBackgroundColor: var(--menuHamburgerBackgroundColor, #fff);

  width: 100%;
  
  display: flex;
  flex-direction: column;
  align-items: center;  

  position: fixed;
  bottom: 0;
  left: 0;
  z-index: var(--menuZindex, 9998);
}

.menu__nav{
  box-sizing: border-box;
  width: 100%;
  height: 0;

  transition: opacity .2s ease-out;
  opacity: 0;

  display: flex;
  align-items: flex-end;
  z-index: 2;
}

.menu__list{
  width: 100%;
  max-height: 100%;
  overflow-y: auto;
  overflow: hidden;
  -webkit-overflow-scrolling: touch;
}

.menu__toggle{
  box-sizing: border-box;
  /* width: var(--uiMenuCircleSize);
  height: var(--uiMenuCircleHeight); */
  flex: none;

  position: relative;
  z-index: 0;
  background: #3498db;
  width: 50px;
  height: 50px;
  border-radius: 50%;
}

.menu__toggle::before{
  /*
  1. The font-size property is used to simplify calculations of the element's sizes and position
  2. The negative value for the bottom property need for hiding half of circle. 
  */

  content: "";
  width: 1em;
  height: 1em;
  font-size: var(--uiMenuCircleSize); /* 1 */

  background-color: var(--uiMenuCircleBackgroundColor);
  /* background-color: var(--uiMenuCircleBackgroundColor); */
  border-radius: 50%;

  position: absolute;
  bottom: -.5em; /* 2 */
  left: calc(50% - .5em);
  z-index: -1;

  will-change: width, height;
  transition: transform .25s cubic-bezier(0.04, -0.1, 0.29, 0.98),
              width .25s cubic-bezier(0.04, -0.1, 0.29, 0.98),
              height .25s cubic-bezier(0.04, -0.1, 0.29, 0.98);
}

/* styles of hamburger's animation */

.m-hamburger::before, 
.m-hamburger::after, 
.m-hamburger__label{
  transition-timing-function: ease;
  transition-duration: .15s;  
}

.m-hamburger::before, 
.m-hamburger::after{
  transition-property: transform;
}

.m-hamburger__label{
  transition-property: transform, opacity;
}

/*
=====
MENU STATES
=====
*/

.menu__toggle:focus{
  outline: var(--menuHaburgerOutlineOWidth, 2px) solid var(--menuHaburgerOutlineColor);
  outline-offset: var(--menuHaburgerOutlineOffset, 5px);
}

.menu_activated{
  height: 100%;
  /* background-color:rgba(52, 152, 219, 0.8); */
}

.menu_activated .menu__nav{
  flex-grow: 1;
  opacity: 1;

  will-change: opacity;
  transition-duration: .2s;
  transition-delay: .3s;
}

.menu_activated .menu__toggle::before{
  width: 100vmax;
  height: 100vmax;
  transform: translate3d(-50vh, -50vh, 0) scale(5);
  transition-duration: 1s;
}

.menu:not(.menu_activated) .menu__list{
  display: none;
}

.menu_activated .m-hamburger::before{
  top: 50%;
  transform: translate3d(0, -50%, 0) rotate(45deg);
}

.menu_activated .m-hamburger::after{
  transform: translate3d(0, -50%, 0) rotate(135deg);
  top: 50%;
}

.menu_activated .m-hamburger__label{
  transform: rotate(-45deg) translate3d(-.285em,-.3em, 0);
  opacity: 0;
}

/*
=====
SETTINGS
=====
*/

:root{
  --colorWhite: #fff;
  --colorMain: #4557bb;
  --menuCircleBackgroundColor: var(--colorMain);
  --menuHamburgerBackgroundColor: var(--colorWhite);
  --menuHaburgerOutlineColor: var(--colorMain);
}

.menu_activated{
  --menuHaburgerOutlineColor: var(--colorWhite);
}

/*
=====
DEMO
=====
*/

body{
  display: flex;
  height: 100vh;
  margin: 0;  
  font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Open Sans, Ubuntu, Fira Sans, Helvetica Neue, sans-serif;
  font-size: 1rem;
}

.page{
  max-width: 380px;
  padding: 1rem;
  margin: auto;  
  text-align: center;
}

.page__name{
  display: block;
  font-size: 2rem;
  font-weight: 700;
}

.page__hint{
  display: block;
  line-height: 1.45;
  margin-top: 1rem;
}

.menu__group{
  --rLinkTextColor: var(--colorWhite);

  padding: .5rem 2rem; 
  font-size: 2rem;
  font-weight: 700;
  text-transform: uppercase;
  text-align: -webkit-center;
}

/** 
* MY CSS
*/

.m-hamburger__label{
  background: #fff;
}

.m-hamburger::before,
.m-hamburger::after{
  background: #fff;
}

.menu__list .r-list{
  margin: 1px !important;
}

.flip {
    /* position: absolute; */
    width: 160px;
    height: 25px;
    -webkit-perspective: 500px;
    -moz-perspective: 500px;
    -ms-perspective: 500px;
    perspective: 500px;
    margin-left: -150px;
    /* margin: -24px 0 0 -80px; */
}

.flip a {
    font-weight: 400;
    text-transform: uppercase;
    margin: 0;
    padding: 0;
    width: 100%;
    height: 100%;
    position: absolute;
    -webkit-transform-style: preserve-3d;
    -moz-transform-style: preserve-3d;
    -o-transform-style: preserve-3d;
    -ms-transform-style: preserve-3d;
    transform-style: preserve-3d;
    -webkit-transform: translateZ(-25px);
    -moz-transform: translateZ(-25px);
    -o-transform: translateZ(-25px);
    -ms-transform: translateZ(-25px);
    transform: translateZ(-25px);
    -webkit-transition: -webkit-transform 0.3s;
    -moz-transition: -moz-transform 0.3s;
    -o-transition: -o-transform 0.3s;
    -ms-transition: -ms-transform 0.3s;
    transition: transform 0.3s;
    cursor: pointer;
}

.flip a .front,
.flip a .back {
    margin: 0;
    width: 150px;
    height: 35px;
    line-height: 35px;
    position: absolute;
    text-align: center;
    letter-spacing: 0.2em;
    font-size: 12px;
    border-radius: 5px;
    font-weight: bold;
}

.flip a .front {
    background-color: #3498db;
    color: #fff;
    -webkit-transform: rotateY(0) translateZ(24px);
    -moz-transform: rotateY(0) translateZ(24px);
    -o-transform: rotateY(0) translateZ(24px);
    -ms-transform: rotateY(0) translateZ(24px);
    transform: rotateY(0) translateZ(24px);
}

.flip a .back {
    background-color: rgba(255, 255, 255, 0);
    color: rgba(34, 34, 34, 0);
    -webkit-transform: rotateX(90deg) translateZ(24px);
    -moz-transform: rotateX(90deg) translateZ(24px);
    -o-transform: rotateX(90deg) translateZ(24px);
    -ms-transform: rotateX(90deg) translateZ(24px);
    transform: rotateX(90deg) translateZ(24px);
    overflow: hidden;
}

.flip a .back:after {
    content: '';
    position: absolute;
    top: -32%;
    left: -10%;
    width: 120%;
    height: 50%;
    background: #222;
    -webkit-transform: rotate(8deg);
    -moz-transform: rotate(8deg);
    -o-transform: rotate(8deg);
    -ms-transform: rotate(8deg);
    transform: rotate(8deg);
    -webkit-transition: all 0.5s ease;
    -moz-transition: all 0.5s ease;
    -o-transition: all 0.5s ease;
    -ms-transition: all 0.5s ease;
    transition: all 0.5s ease;
    -webkit-transition-delay: 0.15s;
    -moz-transition-delay: 0.15s;
    -o-transition-delay: 0.15s;
    -ms-transition-delay: 0.15s;
    transition-delay: 0.15s;
}

.flip a:hover {
    -webkit-transform: translateZ(-24px) rotateX(-90deg);
    -moz-transform: translateZ(-24px) rotateX(-90deg);
    -o-transform: translateZ(-24px) rotateX(-90deg);
    -ms-transform: translateZ(-24px) rotateX(-90deg);
    transform: translateZ(-24px) rotateX(-90deg);
}

.flip a:hover .front {
    background: #000;
    -webkit-transition: all 0.8s ease;
    -moz-transition: all 0.8s ease;
    -o-transition: all 0.8s ease;
    -ms-transition: all 0.8s ease;
    transition: all 0.8s ease;
}

.flip a:hover .back {
    color: #fff;
    -webkit-transition: color 0.4s linear;
    -moz-transition: color 0.4s linear;
    -o-transition: color 0.4s linear;
    -ms-transition: color 0.4s linear;
    transition: color 0.4s linear;
    background: #061a45;
    font-size: 14px;
    font-weight: 500;
}

.flip a:hover .back:after {
    -webkit-transform: rotate(6deg) translate(100px, -18px);
    -moz-transform: rotate(6deg) translate(100px, -18px);
    -o-transform: rotate(6deg) translate(100px, -18px);
    -ms-transform: rotate(6deg) translate(100px, -18px);
    transform: rotate(6deg) translate(100px, -18px);
}

/** Enroll */
/* .glow-on-hover {
    width: 140px;
    height: 35px;
    border: none;
    outline: none;
    color: #fff;
    background: #192a56;
    cursor: pointer;
    position: relative;
    letter-spacing: 3px;
    z-index: 0;
    border-radius: 5px;
    padding: 8px;
}

.glow-on-hover:before {
    content: '';
    background: linear-gradient(45deg, #ff0000, #ff7300, #fffb00, #48ff00, #00ffd5, #002bff, #7a00ff, #ff00c8, #ff0000);
    position: absolute;
    top: -2px;
    left: -2px;
    background-size: 400%;
    z-index: -1;
    filter: blur(5px);
    width: calc(100% + 4px);
    height: calc(100% + 4px);
    animation: glowing 20s linear infinite;
    opacity: 0;
    transition: opacity .3s ease-in-out;
    border-radius: 5px;
}

.glow-on-hover:active {
    color: #000
}

.glow-on-hover:active:after {
    background: transparent;
}

.glow-on-hover:hover:before {
    opacity: 1;
}

.glow-on-hover:after {
    z-index: -1;
    content: '';
    position: absolute;
    width: 100%;
    height: 100%;
    background: #192a56;
    left: 0;
    top: 0;
    border-radius: 5px;
}

@keyframes glowing {
    0% {
        background-position: 0 0;
    }

    50% {
        background-position: 400% 0;
    }

    100% {
        background-position: 0 0;
    }
} */

.btn,
.btn2 {
    width: 300px;
    height: 100px;
    font-size: 30px;
    text-align: center;
    line-height: 100px;
    color: rgba(255, 255, 255, 0.9);
    border-radius: 50px;
    background: linear-gradient(-45deg, #ffa63d, #ff3d77, #338aff, #3cf0c5);
    background-size: 600%;
    -webkit-animation: anime 16s linear infinite;
    animation: anime 16s linear infinite;
}

.btn2 {
    position: absolute;
    margin-top: -70px;
    z-index: -1;
    -webkit-filter: blur(30px);
    filter: blur(30px);
    opacity: 0.8;
}

@-webkit-keyframes anime {
    0% {
        background-position: 0% 50%;
    }

    50% {
        background-position: 100% 50%;
    }

    100% {
        background-position: 0% 50%;
    }
}

@keyframes anime {
    0% {
        background-position: 0% 50%;
    }

    50% {
        background-position: 100% 50%;
    }

    100% {
        background-position: 0% 50%;
    }
}


/** 
Responsive
*/

/* 1920px */
@media only screen and (max-width: 1920px) {
.big-column {
    width: 30%;
}
.small-column {
    width: 70%;
}
}

/* 1024px */
@media only screen and (max-width: 1024px) {
.big-column {
    width: 40%;
}
.small-column {
    width: 60%;
}
.column-wrap {
    left: 20%;
}
}

/* 768px*/

@media only screen and (max-width: 768px) {
    .big-column {
        width: 100%;
    }
    .small-column {
        display: none;
    }
    
}

/* 584px*/

@media only screen and (max-width: 584px) {
    .big-column {
        width: 100%;
    }
    
    .column-wrap {
    left: -5%;
    top: 45%;
}
}

/* 411px*/

@media only screen and (max-width: 411px) {
    .big-column {
        width: 100%;
    }

}

/* 384px*/

@media only screen and (max-width: 384px) {
    .big-column {
        width: 100%;
    }
    .column-wrap {
        left: -7%;
    }
}